      SUBROUTINE M14_SMATRIXHEL(P,HEL,ANS)
      IMPLICIT NONE
C     
C     CONSTANT
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
      INTEGER                 NCOMB
      PARAMETER (             NCOMB=16)
CF2PY INTENT(OUT) :: ANS
CF2PY INTENT(IN) :: HEL
CF2PY INTENT(IN) :: P(0:3,NEXTERNAL)

C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
      INTEGER HEL
C     
C     GLOBAL VARIABLES
C     
      INTEGER USERHEL
      COMMON/M14_HELUSERCHOICE/USERHEL
C     ----------
C     BEGIN CODE
C     ----------
      USERHEL=HEL
      CALL M14_SMATRIX(P,ANS)
      USERHEL=-1

      END

      SUBROUTINE M14_SMATRIX(P,ANS)
C     
C     Generated by MadGraph5_aMC@NLO v. 2.6.5, 2018-02-03
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     MadGraph5_aMC@NLO StandAlone Version
C     
C     Returns amplitude squared summed/avg over colors
C     and helicities
C     for the point in phase space P(0:3,NEXTERNAL)
C     
C     Process: g g > t t~ h DIM6<=1 FCNC=0
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
      INTEGER    NINITIAL
      PARAMETER (NINITIAL=2)
      INTEGER NPOLENTRIES
      PARAMETER (NPOLENTRIES=(NEXTERNAL+1)*6)
      INTEGER                 NCOMB
      PARAMETER (             NCOMB=16)
      INTEGER HELAVGFACTOR
      PARAMETER (HELAVGFACTOR=4)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
CF2PY INTENT(OUT) :: ANS
CF2PY INTENT(IN) :: P(0:3,NEXTERNAL)
C     
C     LOCAL VARIABLES 
C     
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
C     put in common block to expose this variable to python interface
      COMMON/M14_PROCESS_NHEL/NHEL
      REAL*8 T
      REAL*8 M14_MATRIX
      INTEGER IHEL,IDEN, I, J
C     For a 1>N process, them BEAMTWO_HELAVGFACTOR would be set to 1.
      INTEGER BEAMS_HELAVGFACTOR(2)
      DATA (BEAMS_HELAVGFACTOR(I),I=1,2)/2,2/
      INTEGER JC(NEXTERNAL)
      LOGICAL GOODHEL(NCOMB)
      DATA NTRY/0/
      DATA GOODHEL/NCOMB*.FALSE./

C     
C     GLOBAL VARIABLES
C     
      INTEGER USERHEL
      COMMON/M14_HELUSERCHOICE/USERHEL
      DATA USERHEL/-1/

      DATA (NHEL(I,   1),I=1,5) /-1,-1,-1, 1, 0/
      DATA (NHEL(I,   2),I=1,5) /-1,-1,-1,-1, 0/
      DATA (NHEL(I,   3),I=1,5) /-1,-1, 1, 1, 0/
      DATA (NHEL(I,   4),I=1,5) /-1,-1, 1,-1, 0/
      DATA (NHEL(I,   5),I=1,5) /-1, 1,-1, 1, 0/
      DATA (NHEL(I,   6),I=1,5) /-1, 1,-1,-1, 0/
      DATA (NHEL(I,   7),I=1,5) /-1, 1, 1, 1, 0/
      DATA (NHEL(I,   8),I=1,5) /-1, 1, 1,-1, 0/
      DATA (NHEL(I,   9),I=1,5) / 1,-1,-1, 1, 0/
      DATA (NHEL(I,  10),I=1,5) / 1,-1,-1,-1, 0/
      DATA (NHEL(I,  11),I=1,5) / 1,-1, 1, 1, 0/
      DATA (NHEL(I,  12),I=1,5) / 1,-1, 1,-1, 0/
      DATA (NHEL(I,  13),I=1,5) / 1, 1,-1, 1, 0/
      DATA (NHEL(I,  14),I=1,5) / 1, 1,-1,-1, 0/
      DATA (NHEL(I,  15),I=1,5) / 1, 1, 1, 1, 0/
      DATA (NHEL(I,  16),I=1,5) / 1, 1, 1,-1, 0/
      DATA IDEN/256/

      INTEGER POLARIZATIONS(0:NEXTERNAL,0:5)
      COMMON/M14_BORN_BEAM_POL/POLARIZATIONS
      DATA ((POLARIZATIONS(I,J),I=0,NEXTERNAL),J=0,5)/NPOLENTRIES*-1/

C     
C     FUNCTIONS
C     
      LOGICAL M14_IS_BORN_HEL_SELECTED

C     ----------
C     BEGIN CODE
C     ----------
      IF(USERHEL.EQ.-1) NTRY=NTRY+1
      DO IHEL=1,NEXTERNAL
        JC(IHEL) = +1
      ENDDO
C     When spin-2 particles are involved, the Helicity filtering is
C      dangerous for the 2->1 topology.
C     This is because depending on the MC setup the initial PS points
C      have back-to-back initial states
C     for which some of the spin-2 helicity configurations are zero.
C      But they are no longer zero
C     if the point is boosted on the z-axis. Remember that HELAS
C      helicity amplitudes are no longer
C     lorentz invariant with expternal spin-2 particles (only the
C      helicity sum is).
C     For this reason, we simply remove the filterin when there is
C      only three external particles.
      IF (NEXTERNAL.LE.3) THEN
        DO IHEL=1,NCOMB
          GOODHEL(IHEL)=.TRUE.
        ENDDO
      ENDIF
      ANS = 0D0
      DO IHEL=1,NCOMB
        IF (USERHEL.EQ.-1.OR.USERHEL.EQ.IHEL) THEN
          IF (GOODHEL(IHEL) .OR. NTRY .LT. 20.OR.USERHEL.NE.-1) THEN
            IF(NTRY.GE.2.AND.POLARIZATIONS(0,0).NE.
     $       -1.AND.(.NOT.M14_IS_BORN_HEL_SELECTED(IHEL))) THEN
              CYCLE
            ENDIF
            T=M14_MATRIX(P ,NHEL(1,IHEL),JC(1))
            IF(POLARIZATIONS(0,0).EQ.-1.OR.M14_IS_BORN_HEL_SELECTED(IHE
     $L)) THEN
              ANS=ANS+T
            ENDIF
            IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL)) THEN
              GOODHEL(IHEL)=.TRUE.
            ENDIF
          ENDIF
        ENDIF
      ENDDO
      ANS=ANS/DBLE(IDEN)
      IF(USERHEL.NE.-1) THEN
        ANS=ANS*HELAVGFACTOR
      ELSE
        DO J=1,NINITIAL
          IF (POLARIZATIONS(J,0).NE.-1) THEN
            ANS=ANS*BEAMS_HELAVGFACTOR(J)
            ANS=ANS/POLARIZATIONS(J,0)
          ENDIF
        ENDDO
      ENDIF
      END


      REAL*8 FUNCTION M14_MATRIX(P,NHEL,IC)
C     
C     Generated by MadGraph5_aMC@NLO v. 2.6.5, 2018-02-03
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     Returns amplitude squared summed/avg over colors
C     for the point with external lines W(0:6,NEXTERNAL)
C     
C     Process: g g > t t~ h DIM6<=1 FCNC=0
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=38)
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
      INTEGER    NWAVEFUNCS, NCOLOR
      PARAMETER (NWAVEFUNCS=15, NCOLOR=2)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      COMPLEX*16 IMAG1
      PARAMETER (IMAG1=(0D0,1D0))
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C     
C     LOCAL VARIABLES 
C     
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(20,NWAVEFUNCS)
      COMPLEX*16 DUM0,DUM1
      DATA DUM0, DUM1/(0D0, 0D0), (1D0, 0D0)/
C     
C     GLOBAL VARIABLES
C     
      INCLUDE 'coupl.inc'

C     
C     COLOR DATA
C     
      DATA DENOM(1)/3/
      DATA (CF(I,  1),I=  1,  2) /   16,   -2/
C     1 T(1,2,3,4)
      DATA DENOM(2)/3/
      DATA (CF(I,  2),I=  1,  2) /   -2,   16/
C     1 T(2,1,3,4)
C     ----------
C     BEGIN CODE
C     ----------
      CALL VXXXXX(P(0,1),ZERO,NHEL(1),-1*IC(1),W(1,1))
      CALL VXXXXX(P(0,2),ZERO,NHEL(2),-1*IC(2),W(1,2))
      CALL OXXXXX(P(0,3),MDL_MT,NHEL(3),+1*IC(3),W(1,3))
      CALL IXXXXX(P(0,4),MDL_MT,NHEL(4),-1*IC(4),W(1,4))
      CALL SXXXXX(P(0,5),+1*IC(5),W(1,5))
C     Amplitude(s) for diagram number 1
      CALL FFVVS2_4_0(W(1,4),W(1,3),W(1,1),W(1,2),W(1,5),GC_601,GC_600
     $ ,AMP(1))
      CALL VVV1P0_1(W(1,1),W(1,2),GC_6,ZERO,ZERO,W(1,6))
      CALL FFS2_4_1(W(1,3),W(1,5),GC_739,GC_738,MDL_MT,MDL_WT,W(1,7))
C     Amplitude(s) for diagram number 2
      CALL FFV6_0(W(1,4),W(1,7),W(1,6),GC_7,AMP(2))
      CALL FFS4_1(W(1,3),W(1,5),GC_954,MDL_MT,MDL_WT,W(1,8))
C     Amplitude(s) for diagram number 3
      CALL FFV6_0(W(1,4),W(1,8),W(1,6),GC_7,AMP(3))
C     Amplitude(s) for diagram number 4
      CALL FFV11_9_0(W(1,4),W(1,8),W(1,6),GC_725,GC_726,AMP(4))
      CALL FFS2_4_2(W(1,4),W(1,5),GC_739,GC_738,MDL_MT,MDL_WT,W(1,9))
C     Amplitude(s) for diagram number 5
      CALL FFV6_0(W(1,9),W(1,3),W(1,6),GC_7,AMP(5))
      CALL FFS4_2(W(1,4),W(1,5),GC_954,MDL_MT,MDL_WT,W(1,10))
C     Amplitude(s) for diagram number 6
      CALL FFV6_0(W(1,10),W(1,3),W(1,6),GC_7,AMP(6))
C     Amplitude(s) for diagram number 7
      CALL FFV11_9_0(W(1,10),W(1,3),W(1,6),GC_725,GC_726,AMP(7))
C     Amplitude(s) for diagram number 8
      CALL FFVS4_6_0(W(1,4),W(1,3),W(1,6),W(1,5),GC_599,GC_598,AMP(8))
      CALL FFV6_1(W(1,3),W(1,1),GC_7,MDL_MT,MDL_WT,W(1,6))
      CALL FFV6_2(W(1,4),W(1,2),GC_7,MDL_MT,MDL_WT,W(1,11))
C     Amplitude(s) for diagram number 9
      CALL FFS2_4_0(W(1,11),W(1,6),W(1,5),GC_739,GC_738,AMP(9))
C     Amplitude(s) for diagram number 10
      CALL FFS4_0(W(1,11),W(1,6),W(1,5),GC_954,AMP(10))
      CALL FFV11_9_2(W(1,4),W(1,2),GC_725,GC_726,MDL_MT,MDL_WT,W(1,12))
C     Amplitude(s) for diagram number 11
      CALL FFS4_0(W(1,12),W(1,6),W(1,5),GC_954,AMP(11))
      CALL FFV11_9_1(W(1,3),W(1,1),GC_725,GC_726,MDL_MT,MDL_WT,W(1,13))
C     Amplitude(s) for diagram number 12
      CALL FFS4_0(W(1,11),W(1,13),W(1,5),GC_954,AMP(12))
C     Amplitude(s) for diagram number 13
      CALL FFV6_0(W(1,9),W(1,6),W(1,2),GC_7,AMP(13))
C     Amplitude(s) for diagram number 14
      CALL FFV6_0(W(1,10),W(1,6),W(1,2),GC_7,AMP(14))
C     Amplitude(s) for diagram number 15
      CALL FFV11_9_0(W(1,10),W(1,6),W(1,2),GC_725,GC_726,AMP(15))
C     Amplitude(s) for diagram number 16
      CALL FFV6_0(W(1,10),W(1,13),W(1,2),GC_7,AMP(16))
C     Amplitude(s) for diagram number 17
      CALL FFVS4_6_0(W(1,4),W(1,6),W(1,2),W(1,5),GC_599,GC_598,AMP(17))
      CALL FFV6_2(W(1,4),W(1,1),GC_7,MDL_MT,MDL_WT,W(1,6))
      CALL FFV6_1(W(1,3),W(1,2),GC_7,MDL_MT,MDL_WT,W(1,13))
C     Amplitude(s) for diagram number 18
      CALL FFS2_4_0(W(1,6),W(1,13),W(1,5),GC_739,GC_738,AMP(18))
C     Amplitude(s) for diagram number 19
      CALL FFS4_0(W(1,6),W(1,13),W(1,5),GC_954,AMP(19))
      CALL FFV11_9_1(W(1,3),W(1,2),GC_725,GC_726,MDL_MT,MDL_WT,W(1,14))
C     Amplitude(s) for diagram number 20
      CALL FFS4_0(W(1,6),W(1,14),W(1,5),GC_954,AMP(20))
      CALL FFV11_9_2(W(1,4),W(1,1),GC_725,GC_726,MDL_MT,MDL_WT,W(1,15))
C     Amplitude(s) for diagram number 21
      CALL FFS4_0(W(1,15),W(1,13),W(1,5),GC_954,AMP(21))
C     Amplitude(s) for diagram number 22
      CALL FFV6_0(W(1,6),W(1,7),W(1,2),GC_7,AMP(22))
C     Amplitude(s) for diagram number 23
      CALL FFV6_0(W(1,6),W(1,8),W(1,2),GC_7,AMP(23))
C     Amplitude(s) for diagram number 24
      CALL FFV11_9_0(W(1,6),W(1,8),W(1,2),GC_725,GC_726,AMP(24))
C     Amplitude(s) for diagram number 25
      CALL FFV6_0(W(1,15),W(1,8),W(1,2),GC_7,AMP(25))
C     Amplitude(s) for diagram number 26
      CALL FFVS4_6_0(W(1,6),W(1,3),W(1,2),W(1,5),GC_599,GC_598,AMP(26))
C     Amplitude(s) for diagram number 27
      CALL FFV6_0(W(1,9),W(1,13),W(1,1),GC_7,AMP(27))
C     Amplitude(s) for diagram number 28
      CALL FFV6_0(W(1,10),W(1,13),W(1,1),GC_7,AMP(28))
C     Amplitude(s) for diagram number 29
      CALL FFV11_9_0(W(1,10),W(1,13),W(1,1),GC_725,GC_726,AMP(29))
C     Amplitude(s) for diagram number 30
      CALL FFV6_0(W(1,10),W(1,14),W(1,1),GC_7,AMP(30))
C     Amplitude(s) for diagram number 31
      CALL FFV6_0(W(1,11),W(1,7),W(1,1),GC_7,AMP(31))
C     Amplitude(s) for diagram number 32
      CALL FFV6_0(W(1,11),W(1,8),W(1,1),GC_7,AMP(32))
C     Amplitude(s) for diagram number 33
      CALL FFV11_9_0(W(1,11),W(1,8),W(1,1),GC_725,GC_726,AMP(33))
C     Amplitude(s) for diagram number 34
      CALL FFV6_0(W(1,12),W(1,8),W(1,1),GC_7,AMP(34))
      CALL FFVV2_4_1(W(1,3),W(1,1),W(1,2),GC_728,GC_727,MDL_MT,MDL_WT
     $ ,W(1,12))
C     Amplitude(s) for diagram number 35
      CALL FFS4_0(W(1,4),W(1,12),W(1,5),GC_954,AMP(35))
      CALL FFVV2_4_2(W(1,4),W(1,1),W(1,2),GC_728,GC_727,MDL_MT,MDL_WT
     $ ,W(1,12))
C     Amplitude(s) for diagram number 36
      CALL FFS4_0(W(1,12),W(1,3),W(1,5),GC_954,AMP(36))
      CALL FFVS4_6_1(W(1,3),W(1,1),W(1,5),GC_599,GC_598,MDL_MT,MDL_WT
     $ ,W(1,12))
C     Amplitude(s) for diagram number 37
      CALL FFV6_0(W(1,4),W(1,12),W(1,2),GC_7,AMP(37))
      CALL FFVS4_6_2(W(1,4),W(1,1),W(1,5),GC_599,GC_598,MDL_MT,MDL_WT
     $ ,W(1,12))
C     Amplitude(s) for diagram number 38
      CALL FFV6_0(W(1,12),W(1,3),W(1,2),GC_7,AMP(38))
      JAMP(1)=+IMAG1*AMP(1)+IMAG1*AMP(2)+IMAG1*AMP(3)+IMAG1*AMP(4)
     $ +IMAG1*AMP(5)+IMAG1*AMP(6)+IMAG1*AMP(7)+IMAG1*AMP(8)-AMP(9)
     $ -AMP(10)-AMP(11)-AMP(12)-AMP(13)-AMP(14)-AMP(15)-AMP(16)-AMP(17)
     $ -AMP(31)-AMP(32)-AMP(33)-AMP(34)+IMAG1*AMP(35)+IMAG1*AMP(36)
     $ -AMP(37)
      JAMP(2)=-IMAG1*AMP(1)-IMAG1*AMP(2)-IMAG1*AMP(3)-IMAG1*AMP(4)
     $ -IMAG1*AMP(5)-IMAG1*AMP(6)-IMAG1*AMP(7)-IMAG1*AMP(8)-AMP(18)
     $ -AMP(19)-AMP(20)-AMP(21)-AMP(22)-AMP(23)-AMP(24)-AMP(25)-AMP(26)
     $ -AMP(27)-AMP(28)-AMP(29)-AMP(30)-IMAG1*AMP(35)-IMAG1*AMP(36)
     $ -AMP(38)

      M14_MATRIX = 0.D0
      DO I = 1, NCOLOR
        ZTEMP = (0.D0,0.D0)
        DO J = 1, NCOLOR
          ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
        ENDDO
        M14_MATRIX = M14_MATRIX+ZTEMP*DCONJG(JAMP(I))/DENOM(I)
      ENDDO

      END

      SUBROUTINE M14_GET_VALUE(P, ALPHAS, NHEL ,ANS)
      IMPLICIT NONE
C     
C     CONSTANT
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
      INTEGER NHEL
      DOUBLE PRECISION ALPHAS
      REAL*8 PI
CF2PY INTENT(OUT) :: ANS
CF2PY INTENT(IN) :: NHEL
CF2PY INTENT(IN) :: P(0:3,NEXTERNAL)
CF2PY INTENT(IN) :: ALPHAS
C     ROUTINE FOR F2PY to read the benchmark point.    
C     the include file with the values of the parameters and masses 
      INCLUDE 'coupl.inc'

      PI = 3.141592653589793D0
      G = 2* DSQRT(ALPHAS*PI)
      CALL UPDATE_AS_PARAM()
      IF (NHEL.NE.0) THEN
        CALL M14_SMATRIXHEL(P, NHEL, ANS)
      ELSE
        CALL M14_SMATRIX(P, ANS)
      ENDIF
      RETURN
      END

      SUBROUTINE M14_INITIALISEMODEL(PATH)
C     ROUTINE FOR F2PY to read the benchmark point.    
      IMPLICIT NONE
      CHARACTER*512 PATH
CF2PY INTENT(IN) :: PATH
      CALL SETPARA(PATH)  !first call to setup the paramaters    
      RETURN
      END

      LOGICAL FUNCTION M14_IS_BORN_HEL_SELECTED(HELID)
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
      INTEGER    NCOMB
      PARAMETER (NCOMB=16)
C     
C     ARGUMENTS
C     
      INTEGER HELID
C     
C     LOCALS
C     
      INTEGER I,J
      LOGICAL FOUNDIT
C     
C     GLOBALS
C     
      INTEGER HELC(NEXTERNAL,NCOMB)
      COMMON/M14_PROCESS_NHEL/HELC

      INTEGER POLARIZATIONS(0:NEXTERNAL,0:5)
      COMMON/M14_BORN_BEAM_POL/POLARIZATIONS
C     ----------
C     BEGIN CODE
C     ----------

      M14_IS_BORN_HEL_SELECTED = .TRUE.
      IF (POLARIZATIONS(0,0).EQ.-1) THEN
        RETURN
      ENDIF

      DO I=1,NEXTERNAL
        IF (POLARIZATIONS(I,0).EQ.-1) THEN
          CYCLE
        ENDIF
        FOUNDIT = .FALSE.
        DO J=1,POLARIZATIONS(I,0)
          IF (HELC(I,HELID).EQ.POLARIZATIONS(I,J)) THEN
            FOUNDIT = .TRUE.
            EXIT
          ENDIF
        ENDDO
        IF(.NOT.FOUNDIT) THEN
          M14_IS_BORN_HEL_SELECTED = .FALSE.
          RETURN
        ENDIF
      ENDDO

      RETURN
      END

